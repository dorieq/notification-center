version: '3.8'

services:
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    ports:
      - "9092:9092"   
      - "29092:29092" 
      - "9093:9093"
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

      KAFKA_CFG_LISTENERS: "PLAINTEXT_INTERNAL://0.0.0.0:29092,PLAINTEXT_EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"

      # ✅ Match advertised listeners to network
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT_INTERNAL://kafka:29092,PLAINTEXT_EXTERNAL://localhost:9092"

      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT"

      # ✅ This must match one of the advertised listeners
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL

      KAFKA_KRAFT_CLUSTER_ID: "notif-center-cluster-id"
    networks:
      - notif-net

  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - notif-net

  notify-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notify-service
    ports:
      - "8100:8100"
    depends_on:
      - kafka
      - mongodb
    environment:
      PORT: 8100
      KAFKA_BROKER: kafka:29092
      KAFKA_TOPIC: notifications
      KAFKA_GROUP_ID: notify-group
      WS_ORIGIN: http://localhost:3000
      LOG_LEVEL: debug
      MONGO_URI: mongodb://mongodb:27017
    networks:
      - notif-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  kafka_data:
  mongo_data:

networks:
  notif-net:
    driver: bridge
