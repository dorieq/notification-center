version: '3.8'

services:
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_KRAFT_CLUSTER_ID: "notif-center-cluster-id"
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - notif-net

  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - notif-net

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: redpanda-console
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: kafka:9092
    networks:
      - notif-net

  notify-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notify-service
    ports:
      - "8100:8100"
    depends_on:
      - kafka
      - mongodb
    environment:
      KAFKA_BROKER: kafka:9092
      MONGO_URI: mongodb://mongodb:27017
    networks:
      - notif-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s


volumes:
  kafka_data:
  mongo_data:

networks:
  notif-net:
    driver: bridge
